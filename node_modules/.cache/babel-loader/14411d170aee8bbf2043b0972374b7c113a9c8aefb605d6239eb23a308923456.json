{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/Uni/Password-manager-app-frontend/src/main_page.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Breadcrumb, Table } from 'antd';\nimport axios from 'axios';\n\n// Table columns\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'app_name',\n  key: 'app_name'\n}, {\n  title: 'User_name',\n  dataIndex: 'username',\n  key: 'username'\n}, {\n  title: 'Password',\n  dataIndex: 'password',\n  key: 'password'\n}];\nconst handleRowClick = record => {\n  setSelectedRow(record);\n  setIsModalOpen(true);\n};\nconst [data, setData] = useState([]);\n\n// State for fetched data\n//const [data, setData] = useState([]);\n\nuseEffect(() => {\n  dataFetching();\n}, []);\n\n// API call to fetch data\nfunction dataFetching() {\n  axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n    // Map the API response to fit table columns structure\n    const mappedData = response.data.map(item => ({\n      app_name: item.title,\n      // Mapping title as app_name\n      username: `User ${item.userId}`,\n      // Mocked username\n      password: '******' // Mocked password\n    }));\n    setData(mappedData);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\n// Close modal\nconst handleModalClose = () => {\n  setIsModalOpen(false);\n  setSelectedRow(null);\n};\n{/* Table content */}\n/*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 24,\n    minHeight: 360,\n    background: colorBgContainer,\n    borderRadius: borderRadiusLG\n  },\n  children: /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: data,\n    columns: columns,\n    rowKey: \"app_name\",\n    onRow: record => ({\n      onClick: () => handleRowClick(record)\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 1\n}, this);","map":{"version":3,"names":["React","useState","useEffect","Breadcrumb","Table","axios","jsxDEV","_jsxDEV","columns","title","dataIndex","key","handleRowClick","record","setSelectedRow","setIsModalOpen","data","setData","dataFetching","get","then","response","mappedData","map","item","app_name","username","userId","password","catch","error","console","handleModalClose","style","padding","minHeight","background","colorBgContainer","borderRadius","borderRadiusLG","children","dataSource","rowKey","onRow","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/daria/Desktop/Uni/Password-manager-app-frontend/src/main_page.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Breadcrumb, Table} from 'antd';\nimport axios from 'axios';\n\n// Table columns\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'app_name',\n        key: 'app_name',\n    },\n    {\n        title: 'User_name',\n        dataIndex: 'username',\n        key: 'username',\n    },\n    {\n        title: 'Password',\n        dataIndex: 'password',\n        key: 'password',\n    },\n];\nconst handleRowClick = (record) => {\n    setSelectedRow(record);\n    setIsModalOpen(true);\n};\n\nconst [data, setData] = useState([]);\n\n\n// State for fetched data\n//const [data, setData] = useState([]);\n\nuseEffect(() => {\n    dataFetching();\n}, []);\n\n// API call to fetch data\nfunction dataFetching() {\n    axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            // Map the API response to fit table columns structure\n            const mappedData = response.data.map(item => ({\n                app_name: item.title,        // Mapping title as app_name\n                username: `User ${item.userId}`, // Mocked username\n                password: '******',         // Mocked password\n            }));\n            setData(mappedData);\n        })\n        .catch(error => {\n            console.error(error);\n        });\n}\n\n\n// Close modal\nconst handleModalClose = () => {\n    setIsModalOpen(false);\n    setSelectedRow(null);\n};\n{/* Table content */}\n<div\n    style={{\n        padding: 24,\n        minHeight: 360,\n        background: colorBgContainer,\n        borderRadius: borderRadiusLG,\n    }}\n>\n    <Table\n        dataSource={data}\n        columns={columns}\n        rowKey=\"app_name\"\n        onRow={(record) => ({\n            onClick: () => handleRowClick(record),\n        })}\n    />\n</div>\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,KAAK,QAAO,MAAM;AACvC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CACZ;EACIC,KAAK,EAAE,MAAM;EACbC,SAAS,EAAE,UAAU;EACrBC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,WAAW;EAClBC,SAAS,EAAE,UAAU;EACrBC,GAAG,EAAE;AACT,CAAC,EACD;EACIF,KAAK,EAAE,UAAU;EACjBC,SAAS,EAAE,UAAU;EACrBC,GAAG,EAAE;AACT,CAAC,CACJ;AACD,MAAMC,cAAc,GAAIC,MAAM,IAAK;EAC/BC,cAAc,CAACD,MAAM,CAAC;EACtBE,cAAc,CAAC,IAAI,CAAC;AACxB,CAAC;AAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;AAGpC;AACA;;AAEAC,SAAS,CAAC,MAAM;EACZgB,YAAY,CAAC,CAAC;AAClB,CAAC,EAAE,EAAE,CAAC;;AAEN;AACA,SAASA,YAAYA,CAAA,EAAG;EACpBb,KAAK,CAACc,GAAG,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAI;IACd;IACA,MAAMC,UAAU,GAAGD,QAAQ,CAACL,IAAI,CAACO,GAAG,CAACC,IAAI,KAAK;MAC1CC,QAAQ,EAAED,IAAI,CAACf,KAAK;MAAS;MAC7BiB,QAAQ,EAAE,QAAQF,IAAI,CAACG,MAAM,EAAE;MAAE;MACjCC,QAAQ,EAAE,QAAQ,CAAU;IAChC,CAAC,CAAC,CAAC;IACHX,OAAO,CAACK,UAAU,CAAC;EACvB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC,CAAC;AACV;;AAGA;AACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAC3BjB,cAAc,CAAC,KAAK,CAAC;EACrBD,cAAc,CAAC,IAAI,CAAC;AACxB,CAAC;AACD,CAAC;AACD,aAAAP,OAAA;EACI0B,KAAK,EAAE;IACHC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,GAAG;IACdC,UAAU,EAAEC,gBAAgB;IAC5BC,YAAY,EAAEC;EAClB,CAAE;EAAAC,QAAA,eAEFjC,OAAA,CAACH,KAAK;IACFqC,UAAU,EAAEzB,IAAK;IACjBR,OAAO,EAAEA,OAAQ;IACjBkC,MAAM,EAAC,UAAU;IACjBC,KAAK,EAAG9B,MAAM,KAAM;MAChB+B,OAAO,EAAEA,CAAA,KAAMhC,cAAc,CAACC,MAAM;IACxC,CAAC;EAAE;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}